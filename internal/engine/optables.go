package engine

type OpCode uint8

var BaseOpJumpTable = []func(jb *Jamboy, opcode OpCode) (finished bool, err error){
	NOP,    // 0x00
	LDd16,  // 0x01
	LD,     // 0x02
	INC,    // 0x03
	INC,    // 0x04
	DEC,    // 0x05
	LD,     // 0x06
	RLCA,   // 0x07
	LD,     // 0x08
	ADD,    // 0x09
	LD,     // 0x0A
	DEC,    // 0x0B
	INC,    // 0x0C
	DEC,    // 0x0D
	LD,     // 0x0E
	RRCA,   // 0x0F
	STOP,   // 0x10
	LDd16,  // 0x11
	LD,     // 0x12
	INC,    // 0x13
	INC,    // 0x14
	DEC,    // 0x15
	LD,     // 0x16
	RLA,    // 0x17
	JR,     // 0x18
	ADD,    // 0x19
	LD,     // 0x1A
	DEC,    // 0x1B
	INC,    // 0x1C
	DEC,    // 0x1D
	LD,     // 0x1E
	RRA,    // 0x1F
	JR,     // 0x20
	LDd16,  // 0x21
	LD,     // 0x22
	INC,    // 0x23
	INC,    // 0x24
	DEC,    // 0x25
	LD,     // 0x26
	DAA,    // 0x27
	JR,     // 0x28
	ADD,    // 0x29
	LD,     // 0x2A
	DEC,    // 0x2B
	INC,    // 0x2C
	DEC,    // 0x2D
	LD,     // 0x2E
	CPL,    // 0x2F
	JR,     // 0x30
	LDd16,  // 0x31
	LD,     // 0x32
	INC,    // 0x33
	INC,    // 0x34
	DEC,    // 0x35
	LD,     // 0x36
	SCF,    // 0x37
	JR,     // 0x38
	ADD,    // 0x39
	LD,     // 0x3A
	DEC,    // 0x3B
	INC,    // 0x3C
	DEC,    // 0x3D
	LD,     // 0x3E
	CCF,    // 0x3F
	LD,     // 0x40
	LD,     // 0x41
	LD,     // 0x42
	LD,     // 0x43
	LD,     // 0x44
	LD,     // 0x45
	LD,     // 0x46
	LD,     // 0x47
	LD,     // 0x48
	LD,     // 0x49
	LD,     // 0x4A
	LD,     // 0x4B
	LD,     // 0x4C
	LD,     // 0x4D
	LD,     // 0x4E
	LD,     // 0x4F
	LD,     // 0x50
	LD,     // 0x51
	LD,     // 0x52
	LD,     // 0x53
	LD,     // 0x54
	LD,     // 0x55
	LD,     // 0x56
	LD,     // 0x57
	LD,     // 0x58
	LD,     // 0x59
	LD,     // 0x5A
	LD,     // 0x5B
	LD,     // 0x5C
	LD,     // 0x5D
	LD,     // 0x5E
	LD,     // 0x5F
	LD,     // 0x60
	LD,     // 0x61
	LD,     // 0x62
	LD,     // 0x63
	LD,     // 0x64
	LD,     // 0x65
	LD,     // 0x66
	LD,     // 0x67
	LD,     // 0x68
	LD,     // 0x69
	LD,     // 0x6A
	LD,     // 0x6B
	LD,     // 0x6C
	LD,     // 0x6D
	LD,     // 0x6E
	LD,     // 0x6F
	LD,     // 0x70
	LD,     // 0x71
	LD,     // 0x72
	LD,     // 0x73
	LD,     // 0x74
	LD,     // 0x75
	HALT,   // 0x76
	LD,     // 0x77
	LD,     // 0x78
	LD,     // 0x79
	LD,     // 0x7A
	LD,     // 0x7B
	LD,     // 0x7C
	LD,     // 0x7D
	LD,     // 0x7E
	LD,     // 0x7F
	ADD,    // 0x80
	ADD,    // 0x81
	ADD,    // 0x82
	ADD,    // 0x83
	ADD,    // 0x84
	ADD,    // 0x85
	ADD,    // 0x86
	ADD,    // 0x87
	ADC,    // 0x88
	ADC,    // 0x89
	ADC,    // 0x8A
	ADC,    // 0x8B
	ADC,    // 0x8C
	ADC,    // 0x8D
	ADC,    // 0x8E
	ADC,    // 0x8F
	SUB,    // 0x90
	SUB,    // 0x91
	SUB,    // 0x92
	SUB,    // 0x93
	SUB,    // 0x94
	SUB,    // 0x95
	SUB,    // 0x96
	SUB,    // 0x97
	SBC,    // 0x98
	SBC,    // 0x99
	SBC,    // 0x9A
	SBC,    // 0x9B
	SBC,    // 0x9C
	SBC,    // 0x9D
	SBC,    // 0x9E
	SBC,    // 0x9F
	AND,    // 0xA0
	AND,    // 0xA1
	AND,    // 0xA2
	AND,    // 0xA3
	AND,    // 0xA4
	AND,    // 0xA5
	AND,    // 0xA6
	AND,    // 0xA7
	XOR,    // 0xA8
	XOR,    // 0xA9
	XOR,    // 0xAA
	XOR,    // 0xAB
	XOR,    // 0xAC
	XOR,    // 0xAD
	XOR,    // 0xAE
	XOR,    // 0xAF
	OR,     // 0xB0
	OR,     // 0xB1
	OR,     // 0xB2
	OR,     // 0xB3
	OR,     // 0xB4
	OR,     // 0xB5
	OR,     // 0xB6
	OR,     // 0xB7
	CP,     // 0xB8
	CP,     // 0xB9
	CP,     // 0xBA
	CP,     // 0xBB
	CP,     // 0xBC
	CP,     // 0xBD
	CP,     // 0xBE
	CP,     // 0xBF
	RET,    // 0xC0
	POP,    // 0xC1
	JP,     // 0xC2
	JP,     // 0xC3
	CALL,   // 0xC4
	PUSH,   // 0xC5
	ADD,    // 0xC6
	RST,    // 0xC7
	RET,    // 0xC8
	RET,    // 0xC9
	JP,     // 0xCA
	PREFIX, // 0xCB
	CALL,   // 0xCC
	CALL,   // 0xCD
	ADC,    // 0xCE
	RST,    // 0xCF
	RET,    // 0xD0
	POP,    // 0xD1
	JP,     // 0xD2
	NOP,    // 0xD3
	CALL,   // 0xD4
	PUSH,   // 0xD5
	SUB,    // 0xD6
	RST,    // 0xD7
	RET,    // 0xD8
	RETI,   // 0xD9
	JP,     // 0xDA
	NOP,    // 0xDB
	CALL,   // 0xDC
	NOP,    // 0xDD
	SBC,    // 0xDE
	RST,    // 0xDF
	LDH,    // 0xE0
	POP,    // 0xE1
	LD,     // 0xE2
	NOP,    // 0xE3
	NOP,    // 0xE4
	PUSH,   // 0xE5
	AND,    // 0xE6
	RST,    // 0xE7
	ADD,    // 0xE8
	JP,     // 0xE9
	LD,     // 0xEA
	NOP,    // 0xEB
	NOP,    // 0xEC
	NOP,    // 0xED
	XOR,    // 0xEE
	RST,    // 0xEF
	LDH,    // 0xF0
	POP,    // 0xF1
	LD,     // 0xF2
	DI,     // 0xF3
	NOP,    // 0xF4
	PUSH,   // 0xF5
	OR,     // 0xF6
	RST,    // 0xF7
	LD,     // 0xF8
	LD,     // 0xF9
	LD,     // 0xFA
	EI,     // 0xFB
	NOP,    // 0xFC
	NOP,    // 0xFD
	CP,     // 0xFE
	RST,    // 0xFF
}
